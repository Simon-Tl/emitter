name: Build ghcr.io image

on:
  push:
    branches: ['main', 'develop-*']
  workflow_dispatch:

jobs:
  build-amd64-image-to-ghcr:
    runs-on: ubuntu-22.04
    env:
      REGISTRY: 'ghcr.io/'
      IMAGE_NAME: emitter
    # If you specify the access for any of these scopes, all of those that are not specified are set to none.
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.commit_sha || '' }}

    # Extract metadata (tags, labels) for the Docker image
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        flavor: |
          latest=auto
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=ref,event=branch
          # minimal (short sha)
          type=sha,enable=true,prefix=sha-,format=short
    - name: Echo steps.meta.outputs.bake-file
      run: cat ${{ steps.meta.outputs.bake-file }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Github resgistry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push image to ${{ env.REGISTRY }}${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Record image info to the outputs of this job
      id: result
      run: |
        echo "image_name=`echo ${{ fromJSON(steps.meta.outputs.json).tags[0] }} | awk -F ':' '{print $1}'`" >> $GITHUB_OUTPUT
        echo "image_tag=`echo ${{ fromJSON(steps.meta.outputs.json).tags[0] }} | awk -F ':' '{print $NF}'`" >> $GITHUB_OUTPUT

    # Map the meta step outputs to this job outputs
    outputs:
      image_name: ${{ steps.result.outputs.image_name }}
      image_tag: ${{ steps.result.outputs.image_tag }}
